
// Rule for introducing tStop() and ItStop

// Initialization of variables, for example, before transformation.
pre {
	// Controls whether debug information is printed.
	var debug = true;
	var emfTool = new Native("org.eclipse.epsilon.emc.emf.tools.EmfTool");
	var ecoreUtil = emfTool.ecoreUtil;
	
}

// We can define operations.
operation printDebug(string) {
	if (debug) {(": "+string).println();}
}


// Rule to introduce tStop into the package, 
// and a reference to it into all controllers of the model
pattern Introduce_deadlineCheck
	pkg : Source!RCPackage
		guard: pkg.name.asString().startsWith(mainPkgRCT) { //clonepackagename
 
	do {
			
		var namesOp = new Set("deadlineCheck,deadlineCheckNormalisation,deadlineCheckNormalForm");
			printDebug("mainPkgRCT " + mainPkgRCT);
	printDebug("clonepackagename " + clonepackagename);
		// creating operation deadlineCheck
		var deadlineCheck 	= new Source!OperationDef();
		deadlineCheck.name 	= "deadlineCheck";
		
		// parameter for the deadlineCheck operation
		var parD = new Source!Parameter();
		var parDtype = new Source!TypeRef();
		//In general, the parameter can be an expression. Should we use real for all cases? 
		//We use nat (email deadlineCheck)
		parDtype.ref = Source!PrimitiveType.all.selectOne(p|p.name="nat");
		parD.type = parDtype;
		parD.name = "d";
		deadlineCheck.parameters.add(parD);
		
		// node container of the deadlineCheck operation  
		var deadlineCheck_I = new Source!Initial();
		deadlineCheck_I.name = "i";
		var deadlineCheck_F = new Source!Final();
		deadlineCheck_F.name = "f";
		var deadlineCheck_Tr = new Source!Transition();
		deadlineCheck_Tr.name = "t";
		deadlineCheck_Tr.source = deadlineCheck_I;
		deadlineCheck_Tr.target = deadlineCheck_F;
		// variable reference used as a deadline expressions
		// this is the parameter d of the deadlineCheck op
		var rfD = new Source!RefExp();
		rfD.ref = parD;
		// call statement used in the deadline expression
		// this is a call to the op tStop
		// getting the tStop operation
		var ItStop = pkg.interfaces.selectOne(i|i.name.equals("ItStop"));
		var tStopSig = ItStop.operations.selectOne(op | op.isTypeOf(Source!OperationSig)
		                                             and op.name.equals("tStop"));
		//printDebug("interface " + ItStop + " tStopSig " + tStopSig);                                             
		var callST = new Source!Call();
		callST.`operation` = tStopSig;
		deadlineCheck_Tr.action = new Source!TimedStatement();
		deadlineCheck_Tr.action.deadline = rfD;
		deadlineCheck_Tr.action.stmt = callST;
		// adding nodes and transition to deadlineCheck
		deadlineCheck.nodes.addAll(Set{deadlineCheck_I, deadlineCheck_F});
		deadlineCheck.transitions.add(deadlineCheck_Tr);
		
		var deadlineCheckSig 	= new Source!OperationSig();
		deadlineCheckSig.name 	= "deadlineCheck";
		// parameter for the deadlineCheckSig operation
		var parD2 = new Source!Parameter();
		var parDtype2 = new Source!TypeRef();
		
		//Similarly to the previous comment.
		parDtype2.ref = Source!PrimitiveType.all.selectOne(p|p.name="nat");
		parD2.type = parDtype2;
		parD2.name = "d";
		deadlineCheckSig.parameters.add(parD2);
		
		// creating interfaces for the defined operations
		var IdeadlineCheck = new Source!Interface();
		IdeadlineCheck.name = "I" + deadlineCheck.name;
		IdeadlineCheck.operations.add(deadlineCheckSig);
		
		
		// The deadlineCheck op must require the interface tStop
		deadlineCheck.rInterfaces.add(ItStop);
		// add Operations and interfaces to current package.
		pkg.operations.add(deadlineCheck); 
		pkg.interfaces.add(IdeadlineCheck); 
		 
		 
		////////////////////////////////////////////////////////////////////////////////////////////////-	
		// For each ControllerDef (see from clause in the pattern) in the set of all controllers  
		// introduce references to the created operations 
		// for ( ctrl : Source!ControllerDef in pkg.controllers) {
		for (ctrl in Source!ControllerDef.all) {
			var deadlineCheckRef 	= new Source!OperationRef();
			deadlineCheckRef.ref 	= deadlineCheck;
			deadlineCheckRef.name	= ctrl.name + "_ref_" + deadlineCheck.name;
			ctrl.lOperations.add(deadlineCheckRef); 
			printDebug("Adding references to operations in controller '" + ctrl.name + "'");
		 }	
		 
		 			
			//printDebug("Exit Introduce Deadline Operations");
	//}
}

}

 